function u0:0(i64) -> i64 system_v {
block0(v0: i64):
    v26 -> v0
    v129 -> v26
    v130 -> v26
    v131 -> v26
    v132 -> v26
    v133 -> v26
    v134 -> v26
    v135 -> v26
    v136 -> v26
    v137 -> v26
    v138 -> v26
    v1 = iconst.i64 0
    v2 = iconst.i64 2
    v3 = urem v0, v2  ; v2 = 2
    v4 = iconst.i64 0
    v5 = icmp eq v3, v4  ; v4 = 0
    brif v5, block1, block2

block1:
    v7 = iconst.i64 2
    jump block3(v7, v7)  ; v7 = 2, v7 = 2

block2:
    v8 = iconst.i64 3
    v9 = urem.i64 v0, v8  ; v8 = 3
    v10 = iconst.i64 0
    v11 = icmp eq v9, v10  ; v10 = 0
    brif v11, block4, block5

block4:
    v13 = iconst.i64 3
    jump block6(v13, v13)  ; v13 = 3, v13 = 3

block5:
    v14 = iconst.i64 5
    v15 = urem.i64 v0, v14  ; v14 = 5
    v16 = iconst.i64 0
    v17 = icmp eq v15, v16  ; v16 = 0
    brif v17, block7, block8

block7:
    v19 = iconst.i64 5
    jump block9(v19, v19)  ; v19 = 5, v19 = 5

block8:
    v20 = iconst.i64 7
    v21 = iconst.i64 0
    jump block10(v21, v20)  ; v21 = 0, v20 = 7

block10(v22: i64, v25: i64):
    v23 = iconst.i64 0
    v24 = icmp eq v22, v23  ; v23 = 0
    brif v24, block11, block12

block11:
    v27 = icmp.i64 sgt v25, v26
    brif v27, block13, block14

block13:
    v29 = iconst.i64 1
    jump block15(v29, v29, v26)  ; v29 = 1, v29 = 1

block14:
    v30 = urem.i64 v26, v25
    v31 = iconst.i64 0
    v32 = icmp eq v30, v31  ; v31 = 0
    brif v32, block16, block17

block16:
    v34 = iconst.i64 1
    jump block18(v34, v34, v25)  ; v34 = 1, v34 = 1

block17:
    v35 = iconst.i64 3
    v36 = iadd.i64 v25, v35  ; v35 = 3
    v37 = urem.i64 v26, v36
    v38 = iconst.i64 0
    v39 = icmp eq v37, v38  ; v38 = 0
    brif v39, block19, block20

block19:
    v41 = iconst.i64 3
    v42 = iadd.i64 v25, v41  ; v41 = 3
    v43 = iconst.i64 1
    jump block21(v43, v43, v42)  ; v43 = 1, v43 = 1

block20:
    v44 = iconst.i64 6
    v45 = iadd.i64 v25, v44  ; v44 = 6
    v46 = urem.i64 v26, v45
    v47 = iconst.i64 0
    v48 = icmp eq v46, v47  ; v47 = 0
    brif v48, block22, block23

block22:
    v50 = iconst.i64 6
    v51 = iadd.i64 v25, v50  ; v50 = 6
    v52 = iconst.i64 1
    jump block24(v52, v52, v51)  ; v52 = 1, v52 = 1

block23:
    v53 = iconst.i64 10
    v54 = iadd.i64 v25, v53  ; v53 = 10
    v55 = urem.i64 v26, v54
    v56 = iconst.i64 0
    v57 = icmp eq v55, v56  ; v56 = 0
    brif v57, block25, block26

block25:
    v59 = iconst.i64 10
    v60 = iadd.i64 v25, v59  ; v59 = 10
    v61 = iconst.i64 1
    jump block27(v61, v61, v60)  ; v61 = 1, v61 = 1

block26:
    v62 = iconst.i64 12
    v63 = iadd.i64 v25, v62  ; v62 = 12
    v64 = urem.i64 v26, v63
    v65 = iconst.i64 0
    v66 = icmp eq v64, v65  ; v65 = 0
    brif v66, block28, block29

block28:
    v68 = iconst.i64 12
    v69 = iadd.i64 v25, v68  ; v68 = 12
    v70 = iconst.i64 1
    jump block30(v70, v70, v69)  ; v70 = 1, v70 = 1

block29:
    v71 = iconst.i64 16
    v72 = iadd.i64 v25, v71  ; v71 = 16
    v73 = urem.i64 v26, v72
    v74 = iconst.i64 0
    v75 = icmp eq v73, v74  ; v74 = 0
    brif v75, block31, block32

block31:
    v77 = iconst.i64 16
    v78 = iadd.i64 v25, v77  ; v77 = 16
    v79 = iconst.i64 1
    jump block33(v79, v79, v78)  ; v79 = 1, v79 = 1

block32:
    v80 = iconst.i64 22
    v81 = iadd.i64 v25, v80  ; v80 = 22
    v82 = urem.i64 v26, v81
    v83 = iconst.i64 0
    v84 = icmp eq v82, v83  ; v83 = 0
    brif v84, block34, block35

block34:
    v86 = iconst.i64 22
    v87 = iadd.i64 v25, v86  ; v86 = 22
    v88 = iconst.i64 1
    jump block36(v88, v88, v87)  ; v88 = 1, v88 = 1

block35:
    v89 = iconst.i64 24
    v90 = iadd.i64 v25, v89  ; v89 = 24
    v91 = urem.i64 v26, v90
    v92 = iconst.i64 0
    v93 = icmp eq v91, v92  ; v92 = 0
    brif v93, block37, block38

block37:
    v95 = iconst.i64 24
    v96 = iadd.i64 v25, v95  ; v95 = 24
    v97 = iconst.i64 1
    jump block39(v97, v97, v96)  ; v97 = 1, v97 = 1

block38:
    v98 = iconst.i64 30
    v99 = iadd.i64 v25, v98  ; v98 = 30
    v100 = urem.i64 v26, v99
    v101 = iconst.i64 0
    v102 = icmp eq v100, v101  ; v101 = 0
    brif v102, block40, block41

block40:
    v104 = iconst.i64 30
    v105 = iadd.i64 v25, v104  ; v104 = 30
    v106 = iconst.i64 1
    jump block42(v106, v106, v105)  ; v106 = 1, v106 = 1

block41:
    v107 = iconst.i64 30
    v108 = iadd.i64 v25, v107  ; v107 = 30
    jump block42(v108, v22, v108)

block42(v103: i64, v118: i64, v128: i64):
    jump block39(v103, v118, v128)

block39(v94: i64, v117: i64, v127: i64):
    jump block36(v94, v117, v127)

block36(v85: i64, v116: i64, v126: i64):
    jump block33(v85, v116, v126)

block33(v76: i64, v115: i64, v125: i64):
    jump block30(v76, v115, v125)

block30(v67: i64, v114: i64, v124: i64):
    jump block27(v67, v114, v124)

block27(v58: i64, v113: i64, v123: i64):
    jump block24(v58, v113, v123)

block24(v49: i64, v112: i64, v122: i64):
    jump block21(v49, v112, v122)

block21(v40: i64, v111: i64, v121: i64):
    jump block18(v40, v111, v121)

block18(v33: i64, v110: i64, v120: i64):
    jump block15(v33, v110, v120)

block15(v28: i64, v109: i64, v119: i64):
    jump block10(v109, v119)

block12:
    v139 = iconst.i64 0
    v140 = iconst.i64 0
    jump block9(v140, v25)  ; v140 = 0

block9(v18: i64, v143: i64):
    jump block6(v18, v143)

block6(v12: i64, v142: i64):
    jump block3(v12, v142)

block3(v6: i64, v141: i64):
    return v141
}
